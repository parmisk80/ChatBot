# -*- coding: utf-8 -*-
"""ChatBot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gjNMK-2DOPqoNZ3W1kGXhBC055kdiZNO
"""

import random
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
from datetime import datetime



faq = {

    'Hello': ['hi dear {name} !' , 'hey buddy' , 'Hello dear {name}'],

    'what is your name ?' : ['you can call me your little assistant' , 'im just a very simple chatbot'],

    'what are you doing ?' : ['im thinking' , 'im here to answer to your questions !'],

    'Good bye' : ['bye {name} ! see you next time' , 'take care' , 'Break a leg {name}'],

    'I love you' : ['thats very kind of you {name} , love you too' , 'oh ! its cool' , 'thats very nice but i can not undrestand feelings'],

    'what time is it ?' : [lambda : f'local time is : {datetime.now().strftime('%H:%M:%S')}']
}



questions = list(faq.keys())

vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(questions)

memory = set()


user_name = input('Enter your name dear: ')
print(f'Hi dear {user_name}! I am your personal assistant. You can ask me anything you want. For your information, you can write Exit in order to stop responding.')

while True:
  user_input = input('>>> ')
  if user_input == 'Exit':
    print(f'Good bye {user_name}, have a nice day.')
    break

  user_vec = vectorizer.transform([user_input])
  similarities = cosine_similarity(user_vec, X)
  best_match_index = similarities.argmax()
  best_match_score = similarities[0, best_match_index]

  if best_match_score > 0.2:
    best_question = questions[best_match_index]
    if best_question in memory:
      print('You already asked this question.')
    else:
      memory.add(best_question)
      response = random.choice(faq[best_question])
      if callable(response):
        response = response()
      else:
        response = response.format(name=user_name)
      print(response)
  else:
    print('I could not understand. Please ask clearly.')